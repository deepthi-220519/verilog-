// Design module
module carry_look_ahead_adder(a,b,c_in,sum,c_out);
  input [3:0]a,b;
  input c_in;
  output [3:0]sum;
  output c_out;
  wire [3:0]c;
  assign c[0]=c_in;
  assign c[1]=(a[0]&b[0]) | ((a[0]^b[0]) & c[0]);
  assign c[2]=(a[1]&b[1]) | ((a[1]&b[1])&((a[0]&b[0]) | ((a[0]^b[0])&c[0])));
  assign c[3]=(a[2]&b[2]) | ((a[2]^b[2])&((a[1]&b[1]) | ((a[1]^b[1])&((a[0]&b[0]) | (a[0]^b[0])&c[0]))));
  assign c_out=(a[3]&b[3]) | ((a[3]^b[3])&(((a[2]&b[2]) | (a[2]^b[2])&((a[1]&b[1]) | ((a[1]^b[1])&((a[0]&b[0]) | (a[0]^b[0])&c[0]))))));
  assign sum=a^b^c;
endmodule


//Testbench module

module tb_carry_look_ahead_adder();
  reg [3:0]a,b;
  reg c_in;
  wire [3:0]sum;
  wire c_out;
  wire [3:0]c;
  carry_look_ahead_adder i_cla(a,b,c_in,sum,c_out);  //instantiating the design module
  initial begin
      $monitor("a=%0d,b=%0d,c_in=%0d,sum=%0d,c_out=%0d",a,b,c_in,sum,c_out);
      a = 4'b1000;
      b = 4'b1000;
      c_in = 1'b0;
      #10;
      a = 4'b111;
      b = 4'b010;
      c_in = 1'b1;
      #30;
      $finish();
  end
endmodule
